https://leetcode.com/problems/number-of-subsequences-that-satisfy-the-given-sum-condition


Example 1:
Input: nums = [3,5,6,7], target = 9
Output: 4
Explanation: There are 4 subsequences that satisfy the condition.
[3] -> Min value + max value <= target (3 + 3 <= 9)
[3,5] -> (3 + 5 <= 9)
[3,5,6] -> (3 + 6 <= 9)
[3,6] -> (3 + 6 <= 9)

Example 2:
Input: nums = [3,3,6,8], target = 10
Output: 6
Explanation: There are 6 subsequences that satisfy the condition. (nums can have repeated numbers).
[3] , [3] , [3,3], [3,6] , [3,6] , [3,3,6]

Example 3:
Input: nums = [2,3,3,4,6,7], target = 12
Output: 61
Explanation: There are 63 non-empty subsequences, two of them do not satisfy the condition ([6,7], [7]).
Number of valid subsequences (63 - 2 = 61).

class Solution {
public:
    int numSubseq(vector<int>& nums, int target) {

        int Mod = 1e9+7;
        int l = 0;
        int n = nums.size();
        int r = n-1;
        int result= 0;

        sort(begin(nums),end(nums));

        vector<int> power(n);
        power[0]=1;

        for(int i = 1 ;i<n;i++){
            power[i]=(power[i-1]*2)%Mod;  //pre computation of power
        }
        while(l<=r){
            if(nums[l]+nums[r]<=target){
                result = (result%Mod+power[r-l]);
                l++;
            }
            else{
                r--;
            }
        }
        return result;
    }
};
