https://leetcode.com/problems/minimum-length-of-string-after-deleting-similar-ends

Example 1:
Input: s = "ca"
Output: 2
Explanation: You can't remove any characters, so the string stays as is.
  
Example 2:
Input: s = "cabaabac"
Output: 0
Explanation: An optimal sequence of operations is:
- Take prefix = "c" and suffix = "c" and remove them, s = "abaaba".
- Take prefix = "a" and suffix = "a" and remove them, s = "baab".
- Take prefix = "b" and suffix = "b" and remove them, s = "aa".
- Take prefix = "a" and suffix = "a" and remove them, s = "".

Example 3:
Input: s = "aabccabba"
Output: 3
Explanation: An optimal sequence of operations is:
- Take prefix = "aa" and suffix = "a" and remove them, s = "bccabb".
- Take prefix = "b" and suffix = "bb" and remove them, s = "cca".

class Solution {
public:
    int minimumLength(string s) {

        int n = s.length();

        int i = 0 ;
        int j = n-1;

        while(i<j && s[i]==s[j]){
            char ch = s[i];

            while(i<j && s[i]==ch){
                i++;
            }
             while(i<=j && s[j]==ch){
                j--;
            }
        }
        return j-i+1;
        
    }
};
